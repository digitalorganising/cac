name: "Pipeline: run tests and build images"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "pipeline/**"

jobs:
  test:
    name: Run basic tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./pipeline

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          working-directory: ./pipeline
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pipeline/pyproject.toml

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Build BAML client
        run: |
          uv run baml-cli generate

      - name: Run unit and integration tests
        run: |
          uv run pytest -v test/unit_integration

  build:
    name: Build, test and push pipeline image
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::510900713680:role/github-actions
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build pipeline image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: ./pipeline
          file: ./pipeline/lambda.Dockerfile
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Spin up docker compose services
        uses: hoverkraft-tech/compose-action@v2.0.1

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          working-directory: ./pipeline
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pipeline/pyproject.toml

      - name: Install the project
        working-directory: ./pipeline
        run: |
          uv sync --locked --dev
          uv run baml-cli generate

      - name: Bootstrap localstack
        run: |
          ./bootstrap-localstack.sh

      - name: Run e2e tests
        working-directory: ./pipeline
        run: |
          uv run pytest -v test/e2e

      - name: Push pipeline image
        uses: docker/build-push-action@v5
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          context: ./pipeline
          file: ./pipeline/lambda.Dockerfile
          push: true
          provenance: false
          tags: |
            ${{ env.ECR_REGISTRY }}/cac-pipeline:${{ github.sha }}
            ${{ env.ECR_REGISTRY }}/cac-pipeline:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Lambdas
        run: |
          for lambda in pipeline-scraper pipeline-augmenter pipeline-indexer; do
            aws lambda update-function-code \
              --function-name $lambda \
              --image-uri ${{ steps.login-ecr.outputs.registry }}/cac-pipeline:latest
          done
