services:
  scraper:
    build:
      context: ./pipeline
      dockerfile: lambda.Dockerfile
    command: "lambdas.scraper.handler"
    ports:
      - "9000:8080"
    environment:
      - OPENSEARCH_ENDPOINT=http://opensearch:9200
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/cac-pipeline-scraped-items.fifo
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=eu-west-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    volumes:
      - ./pipeline/index_mappings:/var/task/index_mappings
      - ./pipeline/src/lambdas:/var/task/lambdas
      - ./pipeline/src/pipeline:/var/task/pipeline
      - ./pipeline/src/baml_client:/var/task/baml_client
    networks:
      - opensearch-net
      - localstack-net

  augmenter:
    extends: scraper
    command: "lambdas.augmenter.handler"
    environment:
      - MOCK_LLM=true
    ports: !override
      - "9001:8080"

  indexer:
    extends: scraper
    command: "lambdas.indexer.handler"
    ports: !override
      - "9002:8080"

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566" # LocalStack Gateway
    environment:
      - SERVICES=sqs,s3,sts
    networks:
      - localstack-net

  opensearch:
    image: opensearchproject/opensearch:2.19.2
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables Security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.15.0
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
    networks:
      - opensearch-net

volumes:
  opensearch-data:

networks:
  opensearch-net:
  localstack-net:
